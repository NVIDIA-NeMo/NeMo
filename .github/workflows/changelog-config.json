{
    "categories": [
      {
        "title": "## ASR",
        "labels": ["asr"]
      },
      {
        "title": "## TTS",
        "labels": ["tts"]
      },
      {
        "title": "## NLP",
        "labels": ["nlp"]
      },
      {
        "title": "## NMT",
        "labels": ["nmt", "megatron"]
      },
      {
        "title": "## Text Normalization / Inverse Text Normalization",
        "labels": ["tn", "itn"]
      },
      {
        "title": "## NeMo Tools",
        "labels": ["tools"]
      },
      {
        "title": "## Documentation",
        "labels": ["docs"]
      }
    ],
    "ignore_labels": [
      "ignore"
    ],
    "sort": "ASC",
    "template": "${{CHANGELOG}}\nUncategorized:\n${{UNCATEGORIZED}}\n\n",
    "pr_template": "- ${{TITLE}} :: PR: #${{NUMBER}}",
    "empty_template": "${{OWNER}}\n${{REPO}}\n${{FROM_TAG}}\n${{TO_TAG}}",
    "label_extractor": [
      {
        "pattern": "(.*tts.*)|(.*g2p.*)",
        "target": "tts",
        "flags": "gimu",
        "on_property": "title"
      },
      {
        "pattern": "(.*tts.*)|(.*g2p.*)",
        "target": "tts",
        "flags": "gimu",
        "on_property": "body"
      },
      {
        "pattern": "(.*asr.*)|(.*ctc.*)|(.*rnnt.*)|(.*transducer.*)|(.*dali.*)",
        "target": "asr",
        "flags": "gimu",
        "on_property": "title"
      },
      {
        "pattern": "(.*asr.*)|(.*ctc.*)|(.*rnnt.*)|(.*transducer.*)|(.*dali.*)",
        "target": "asr",
        "flags": "gimu",
        "on_property": "body"
      },
      {
        "pattern": "(.*nlp.*)|(.*punctuation.*)|(.*capitalization.*)|(.*entity.*)|(.*glue.*)|(.*entity.*)|(.*retrieval.*)|(.*entity.*)|(.*intent.*)|(.*slot.*)|(.*entity.*)|(.*language.*)|(.*qa.*)|(.*token class.*)|(.*text class.*)",
        "target": "nlp",
        "flags": "gimu",
        "on_property": "title"
      },
      {
        "pattern": "(.*nlp.*)|(.*punctuation.*)|(.*capitalization.*)|(.*entity.*)|(.*glue.*)|(.*entity.*)|(.*retrieval.*)|(.*entity.*)|(.*intent.*)|(.*slot.*)|(.*entity.*)|(.*language.*)|(.*qa.*)|(.*token class.*)|(.*text class.*)",
        "target": "nlp",
        "flags": "gimu",
        "on_property": "body"
      },
      {
        "pattern": "(.*nmt.*)|(.*bignlp.*)|(.*megatron.*)|(.*machine.*)|(.*translation.*)",
        "target": "nmt",
        "flags": "gimu",
        "on_property": "title"
      },
      {
        "pattern": "(.*nmt.*)|(.*bignlp.*)|(.*megatron.*)|(.*machine.*)|(.*translation.*)",
        "target": "nmt",
        "flags": "gimu",
        "on_property": "body"
      },
      {
        "pattern": "(.*tn.*)|(.*itn.*)|(.*text norm.*)",
        "target": "tn",
        "flags": "gimu",
        "on_property": "title"
      },
      {
        "pattern": "(.*tn.*)|(.*itn.*)|(.*text norm.*)",
        "target": "tn",
        "flags": "gimu",
        "on_property": "body"
      },
      {
        "pattern": "(.*sde.*)|(.*ctc segment.*)",
        "target": "tools",
        "flags": "gimu",
        "on_property": "title"
      },
      {
        "pattern": "(.*sde.*)|(.*ctc segment.*)",
        "target": "tools",
        "flags": "gimu",
        "on_property": "body"
      },
      {
        "pattern": "(.*doc.*)",
        "target": "docs",
        "flags": "gimu",
        "on_property": "title"
      },
      {
        "pattern": "(.*doc.*)",
        "target": "docs",
        "flags": "gimu",
        "on_property": "body"
      }
    ],
    "duplicate_filter": {
      "pattern": ".+",
      "on_property": "title",
      "method": "match"
    },
    "transformers": [
    ],
    "max_tags_to_fetch": 10,
    "max_pull_requests": 500,
    "max_back_track_time_days": 365,
    "exclude_merge_branches": [
    ],
    "tag_resolver": {
      "method": "semver"
    }
}