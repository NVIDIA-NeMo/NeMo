name: NeMo E2E ASR Tests
on:
  workflow_call:
    inputs:
      test_to_run:
        required: true
        type: string
      image-name:
        required: false
        default: nemo_container_asr
        type: string

jobs:
  asr-build:
    uses: ./.github/workflows/_build_container.yml
    with:
      image-name: ${{ inputs.image-name }}
      dockerfile: Dockerfile.ci]

  asr-unit-tests:
    strategy:
      fail-fast: false
      matrix:
        include:
          - script: L0_Unit_Tests_GPU_ASR
            runner: self-hosted-azure-gpus-1
          - script: L0_Unit_Tests_CPU_ASR
            runner: self-hosted-azure-cpu
    needs: [asr-build]
    runs-on: ${{ matrix.runner }}
    name: ${{ matrix.script }}
    steps:
      - name: main
        uses: ./.github/actions/test-template/action.yml
        with:
          runner: ${{ runner.name }}
          script: ${{ matrix.script }}
          tests_to_run: ${{ inputs.test_to_run }}
          image: ${{ inputs.image-name }}
          is_unit_test: true

  e2e-tests-asr-tests:
    strategy:
      fail-fast: false
      matrix:
        include:
          - runner: self-hosted-azure-gpus-1
            script: ASR_dev_run_Speech_to_Text
          - runner: self-hosted-azure-gpus-1
            script: ASR_dev_run_Speech_to_Text_WPE_CitriNet
          - runner: self-hosted-azure-gpus-1
            script: ASR_dev_run_Speech_Pre-training_-_CitriNet
          - runner: self-hosted-azure-gpus-1
            script: Optional_ASR_dev_run_Speech_To_Text_Finetuning
            is_optional: true
          - runner: self-hosted-azure-gpus-1
            script: Optional_ASR_dev_run_Speech_To_Text_HF_Finetuning
            is_optional: true
          - runner: self-hosted-azure-gpus-1
            script: ASR_dev_run_Speech_to_Text_WPE_-_Conformer
          - runner: self-hosted-azure-gpus-1
            script: ASR_dev_run-part_two_Speech_to_Text_WPE_-_Squeezeformer
    runs-on: ${{ matrix.runner }}
    name: ${{ matrix.script }}
    steps:
      - name: main
        uses: ./.github/actions/test-template/action.yml
        with:
          runner: ${{ runner.name }}
          script: ${{ matrix.script }}
          tests_to_run: ${{ inputs.test_to_run }}
          image: ${{ inputs.image-name }}
