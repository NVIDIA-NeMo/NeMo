# Regularly updates the CI container
name: Reboots VMs in a controlled way
on:
  schedule:
    - cron: 0 0 * * *
  pull_request:

jobs:
  main:
    runs-on: ${{ matrix.vm }}
    # environment: main
    strategy:
      fail-fast: false
      matrix:
        vm: 
          - azure-gpu-vm-runner1
          - azure-gpu-vm-runner-1gpu-a
          - azure-gpu-vm-runner-1gpu-c
          - azure-gpu-vm-runner1-h100
          - azure-gpu-vm-runner2
          - azure-gpu-vm-runner6
          - azure-gpu-vm-runner7
          - azure-gpu-vm-runner8
          - azure-gpu-vm-runner9
    steps:
      - name: Reboot
        run: |
          echo ${{ secrets.VM_KEY }} | sudo -S reboot -h now || true

  test:
    needs: main
    runs-on: ${{ matrix.vm }}
    # environment: main
    if: always()
    strategy:
      fail-fast: false
      matrix:
        vm: 
          - azure-gpu-vm-runner1
          - azure-gpu-vm-runner-1gpu-a
          - azure-gpu-vm-runner-1gpu-c
          - azure-gpu-vm-runner1-h100
          - azure-gpu-vm-runner2
          - azure-gpu-vm-runner6
          - azure-gpu-vm-runner7
          - azure-gpu-vm-runner8
          - azure-gpu-vm-runner9
    steps:
      - name: Check nvidia-smi
        run: nvidia-smi

      - name: Re-install docker interface
        run: |
          echo ${{ secrets.VM_KEY }} | sudo -S bash <<"EOF"
          for pkg in nvidia-docker2 nvidia-container-toolkit docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do 
            apt-get remove -y $pkg; 
          done

          # Add Docker's official GPG key:
          apt-get update
          apt-get install ca-certificates curl
          install -m 0755 -d /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
          chmod a+r /etc/apt/keyrings/docker.asc

          # Add the repository to Apt sources:
          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
            $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
            tee /etc/apt/sources.list.d/docker.list > /dev/null
          apt-get update

          apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

          curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | gpg -f --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg 
          curl -s -L https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list | \
            sed 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g' | \
            tee /etc/apt/sources.list.d/nvidia-container-toolkit.list
          apt-get update
          apt-get install -y nvidia-container-toolkit
          
          nvidia-ctk runtime configure --runtime=docker
          systemctl restart docker
          
          apt-get install -y nvidia-docker2
          systemctl restart docker
          EOF

      - name: Check nvidia-smi
        run: |
          docker run --rm --runtime=nvidia --gpus all ubuntu nvidia-smi
      
      - name: Shut runner down on failure
        if: failure()
        run: |
          echo ${{ secrets.VM_KEY }} | sudo -S /home/azureuser/actions-runner/svc.sh stop