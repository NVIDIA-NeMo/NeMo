# syntax=docker/dockerfile:1-labs

# Copyright (c) 2019, NVIDIA CORPORATION. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

ARG BASE_IMAGE=nvcr.io/nvidia/pytorch:24.07-py3
ARG NEMO_REPO
ARG NEMO_TAG
ARG MLM_REPO
ARG MLM_TAG
ARG TE_REPO
ARG TE_TAG
ARG APEX_REPO
ARG APEX_TAG
ARG IMAGE_LABEL

FROM ${BASE_IMAGE} as nemo-bump
ARG NEMO_TAG
WORKDIR /opt
# NeMo
RUN <<"EOF" bash -exu
if [[ ! -d NeMo ]]; then
    git clone https://github.com/NVIDIA/NeMo.git
fi
cd NeMo/
git fetch origin '+refs/pull/*/merge:refs/remotes/pull/*/merge'
git fetch origin $NEMO_TAG
git checkout -f $NEMO_TAG
EOF

FROM ${BASE_IMAGE} as te-wheel
ARG MAX_JOBS
ARG TE_TAG
ARG TE_REPO
COPY --from=nemo-bump /opt/NeMo/reinstall.sh /opt/NeMo/reinstall.sh 
RUN bash /opt/NeMo/reinstall.sh --library te --mode build && \
    ls -al /opt/TransformerEngine || true

FROM ${BASE_IMAGE} as mlm-wheel
ARG MAX_JOBS
ARG MLM_REPO
ARG MLM_TAG
COPY --from=nemo-bump /opt/NeMo/reinstall.sh /opt/NeMo/reinstall.sh 
RUN bash /opt/NeMo/reinstall.sh --library mcore --mode build && \
    ls -al /opt/Megatron-LM || true

FROM ${BASE_IMAGE} as apex-wheel
ARG MAX_JOBS
ARG APEX_REPO
ARG APEX_TAG
COPY --from=nemo-bump /opt/NeMo/reinstall.sh /opt/NeMo/reinstall.sh 
RUN bash /opt/NeMo/reinstall.sh --library apex --mode build && \
    ls -al /opt/Apex || true

FROM ${BASE_IMAGE}
ARG IMAGE_LABEL
LABEL "nemo.library"=${IMAGE_LABEL}

ENV TRANSFORMERS_OFFLINE=0
ENV HYDRA_FULL_ERROR=1
ENV PYTHONUNBUFFERED=1

# APT packages
RUN <<"EOF" bash -ex
apt-get update
apt-get install -y bc libsox-fmt-all -y
apt-get clean
EOF

WORKDIR /workspace
COPY --from=te-wheel /opt/TransformerEngine/ /opt/TransformerEngine/
COPY --from=mlm-wheel /opt/Megatron-LM/ /opt/Megatron-LM/
COPY --from=apex-wheel /opt/Apex /opt/Apex/
ARG MLM_TAG
ARG TE_TAG
ARG APEX_TAG
RUN \
    --mount=type=bind,from=te-wheel,source=/tmp/wheels/te/,target=/tmp/wheels/te/ \
    --mount=type=bind,from=mlm-wheel,source=/tmp/wheels/mcore/,target=/tmp/wheels/mcore/ \
    --mount=type=bind,from=apex-wheel,source=/tmp/wheels/apex/,target=/tmp/wheels/apex/ \
    --mount=type=bind,source=requirements,target=requirements \
    --mount=type=bind,source=tools/ctc_segmentation/requirements.txt,target=tools/ctc_segmentation/requirements.txt \
    --mount=type=bind,source=reinstall.sh,target=reinstall.sh \
    --mount=type=bind,source=setup.py,target=setup.py \
    --mount=type=bind,source=nemo/package_info.py,target=nemo/package_info.py \
    --mount=type=bind,source=nemo/__init__.py,target=nemo/__init__.py <<"EOF" bash -ex
    ls -al /tmp/wheels
    ls -al /tmp/wheels/apex
    bash reinstall.sh --library apex --mode install
    bash reinstall.sh --library te --mode install
    bash reinstall.sh --library mcore --mode install

  # Megatron Core installation
  cp -r /opt/Megatron-LM/. /workspace
EOF

# Copy over NeMo code
COPY --from=nemo-bump /opt/NeMo /opt/NeMo/
RUN <<"EOF" 
bash -ex
bash /opt/NeMo/reinstall.sh --library nemo --mode install

# set permission
chmod 777 -R /workspace
EOF

ENV PYTHONPATH="${PYTHONPATH}:/workspace/Megatron-LM"
