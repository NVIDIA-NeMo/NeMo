
name: "ASR-Adapter"

model:
  # One of the below two values must be set !
  pretrained_model: null  # name of a pretrained model
  nemo_model: null  # path to a ASR model file (.nemo)

  adapter:
    adapter_name: ???
    _target_: nemo.collections.asr.parts.submodules.adapter_modules.LinearAdapter
    in_features: ???  # User must provide the output dimension of the layers of the model
    dim: 32  # can be any hidden dimension as chosen by user, but small values are preferred to reduce param count
    activation: swish
    norm_position: 'post'  # Can be `pre` or `post`

  train_ds:
    # train dataset + dataloader config
    # sample_rate will be merged with model config
    # use_start_end_token will be merged with model config
    # trim_silence will be merged with model config
    # max_duration will be merged with model config
    # min_duration will be merged with model config
    manifest_filepath: ???
    batch_size: 16 # you may increase batch_size if your memory allows
    shuffle: true
    num_workers: 8
    pin_memory: true
    # tarred datasets
    is_tarred: false
    tarred_audio_filepaths: null
    shuffle_n: 2048
    # bucketing params
    bucketing_strategy: "synced_randomized"
    bucketing_batch_size: null

  validation_ds:
    # sample_rate will be merged with model config
    # use_start_end_token will be merged with model config
    manifest_filepath: ???
    batch_size: 16
    shuffle: false
    num_workers: 8
    pin_memory: true

  test_ds:
    # sample_rate will be merged with model config
    # use_start_end_token will be merged with model config
    manifest_filepath: null
    batch_size: 16
    shuffle: false
    num_workers: 8
    pin_memory: true

  optim:
    # optimizer arguments
    # name will be merged with model config
    # betas will be merged with model config
    lr: 0.01
    weight_decay: 0

    # scheduler setup
    sched:
      # name will be merged with model config
      # d_model will be merged with model config
      # scheduler config override
      # min_lr will be merged with model config
      warmup_steps: 1000
      warmup_ratio: null

trainer:
  devices: -1 # number of GPUs, -1 would use all available GPUs
  num_nodes: 1
  max_epochs: null
  max_steps: 1000 # computed at runtime if not set
  val_check_interval: 1.0 # Set to 0.25 to check 4 times per epoch, or an int for number of iterations
  accelerator: auto
  strategy: ddp
  accumulate_grad_batches: 1
  gradient_clip_val: null
  precision: 32 # Should be set to 16 for O1 and O2 to enable the AMP.
  log_every_n_steps: 10  # Interval of logging.
  progress_bar_refresh_rate: 10
  resume_from_checkpoint: null # The path to a checkpoint file to continue the training, restores the whole state including the epoch, step, LR schedulers, apex, etc.
  num_sanity_val_steps: 0 # number of steps to perform validation steps for sanity check the validation process before starting the training, setting to 0 disables it
  check_val_every_n_epoch: 1 # number of evaluations on validation every n epochs
  sync_batchnorm: true
  enable_checkpointing: False  # Provided by exp_manager
  logger: false  # Provided by exp_manager


exp_manager:
  exp_dir: null
  name: ${name}
  create_tensorboard_logger: true
  create_checkpoint_callback: true
  checkpoint_callback_params:
    # in case of multiple validation sets, first one is used
    monitor: "val_wer"
    mode: "min"
    save_top_k: 5
    always_save_nemo: True # saves the checkpoints as nemo files instead of PTL checkpoints

  create_wandb_logger: false
  wandb_logger_kwargs:
    name: null
    project: null
    entity: null

  resume_if_exists: false
  resume_ignore_no_checkpoint: false
