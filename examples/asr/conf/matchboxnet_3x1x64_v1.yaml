name: &name "MatchboxNet-3x1x64"
sample_rate: &sample_rate 16000

timesteps: 128
repeat: &repeat 1
dropout: &dropout 0.0
kernel_size_factor: &kfactor 1.0

labels: &labels ['bed', 'bird', 'cat', 'dog', 'down', 'eight', 'five', 'four', 'go', 'happy', 'house', 'left', 'marvin',
                 'nine', 'no', 'off', 'on', 'one', 'right', 'seven', 'sheila', 'six', 'stop', 'three', 'tree', 'two', 'up', 'wow', 'yes', 'zero']

model:
  train_ds:
    manifest_filepath: ???
    sample_rate: 16000
    labels: *labels
    batch_size: 128
    shuffle: True
    augmentor:
      shift:
        prob: 1.0
        min_shift_ms: -5.0
        max_shift_ms: 5.0
      white_noise:
        prob: 1.0
        min_level: -90
        max_level: -46

  validation_ds:
    manifest_filepath: ???
    sample_rate: 16000
    labels: *labels
    batch_size: 32
    shuffle: False

  preprocessor:
    cls: nemo.collections.asr.modules.AudioToMelSpectrogramPreprocessor
    params:
      normalize: "per_feature"
      window_size: 0.025
      sample_rate: *sample_rate
      window_stride: 0.01
      window: "hann"
      features: &n_mels 64
      n_fft: 512
      frame_splicing: 1
      dither: 0.00001
      stft_conv: false

  spec_augment:
    cls: nemo.collections.asr.modules.SpectrogramAugmentation
    params:
      freq_masks: 2
      time_masks: 2
      freq_width: 15
      time_width: 25
      rect_masks: 5
      rect_time: 25
      rect_freq: 15

  encoder:
    cls: nemo.collections.asr.modules.ConvASREncoder
    params:
      feat_in: *n_mels
      activation: relu
      conv_mask: true

      jasper:
        - filters: 128
          repeat: 1
          kernel: [11]
          stride: [1]
          dilation: [1]
          dropout: *dropout
          residual: false
          separable: true
          kernel_size_factor: *kfactor

        - filters: 64
          repeat: *repeat
          kernel: [13]
          stride: [1]
          dilation: [1]
          dropout: *dropout
          residual: true
          separable: true
          kernel_size_factor: *kfactor

        - filters: 64
          repeat: *repeat
          kernel: [15]
          stride: [1]
          dilation: [1]
          dropout: *dropout
          residual: true
          separable: true
          kernel_size_factor: *kfactor

        - filters: 64
          repeat: *repeat
          kernel: [17]
          stride: [1]
          dilation: [1]
          dropout: *dropout
          residual: true
          separable: true
          kernel_size_factor: *kfactor

        - filters: 128
          repeat: 1
          kernel: [29]
          stride: [1]
          dilation: [2]
          dropout: *dropout
          residual: false
          separable: true
          kernel_size_factor: *kfactor

        - filters: &enc_final_filters 128
          repeat: 1
          kernel: [1]
          stride: [1]
          dilation: [1]
          dropout: *dropout
          residual: false

  decoder:
    cls: nemo.collections.asr.modules.ConvASRDecoderClassification
    params:
      feat_in: *enc_final_filters
      num_classes: 30
      return_logits: True
      pooling_type: 'avg'

  optim:
    name: novograd
    # cls: nemo.core.optim.optimizers.Novograd
    lr: .01
    # optimizer arguments
    betas: [0.8, 0.5]
    weight_decay: 0.001

    # scheduler setup
    sched:
      name: CosineAnnealing

      # pytorch lightning args
      # monitor: val_loss
      # reduce_on_plateau: false

      # Scheduler params
      warmup_steps: null
      warmup_ratio: null
      min_lr: 0.0
      last_epoch: -1

pl:
  trainer:
    gpus: 0 # number of gpus
    max_epochs: 5
    max_steps: null # computed at runtime if not set
    num_nodes: 1
    distributed_backend: ddp
    accumulate_grad_batches: 1
    checkpoint_callback: False  # Provided by exp_manager
    logger: False  # Provided by exp_manager

exp_manager:
  root_dir: null
  name: *name
  create_tensorboard_logger: True
  create_checkpoint_callback: True

hydra:
  run:
    dir: .
  job_logging:
    root:
      handlers: null
