name: &name "ContextNet-192-8x-Stride"
sample_rate: &sample_rate 16000
repeat: 5
dropout: 0.0
separable: true
se: true

model:
  train_ds:
    manifest_filepath: ???
    sample_rate: 16000
    batch_size: 32
    trim_silence: True
    max_duration: 16.7
    shuffle: True
    is_tarred: False
    tarred_audio_filepaths: null

  validation_ds:
    manifest_filepath: ???
    sample_rate: 16000
    batch_size: 32
    shuffle: False

  tokenizer:
    dir: ???  # path to directory which contains either tokenizer.model (bpe) or vocab.txt (for wpe)
    type: ???  # Can be either bpe or wpe

  preprocessor:
    cls: nemo.collections.asr.modules.AudioToMelSpectrogramPreprocessor
    params:
      sample_rate: *sample_rate
      normalize: "per_feature"
      window_size: 0.025
      window_stride: 0.01
      window: "hann"
      features: &n_mels 80
      n_fft: 512
      frame_splicing: 1
      dither: 0.00001
      pad_to: 16
      stft_conv: false

  spec_augment:
    cls: nemo.collections.asr.modules.SpectrogramAugmentation
    params:
      freq_masks: 2
      time_masks: 2
      freq_width: 27
      time_width: 0.05

  encoder:
    cls: nemo.collections.asr.modules.ConvASREncoder
    params:
      feat_in: *n_mels
      activation: relu
      conv_mask: true

      jasper:
        - filters: 192
          repeat: 1
          kernel: [5]
          stride: [1]
          dilation: [1]
          dropout: 0.0
          residual: false
          separable: ${separable}
          se: true
          se_context_size: -1

        - filters: 192
          repeat: ${repeat}
          kernel: [11]
          stride: [2]
          dilation: [1]
          dropout: ${dropout}
          residual: true
          separable: ${separable}
          se: true
          se_context_size: -1
          stride_last: true
          residual_mode: "stride_add"

        - filters: 192
          repeat: ${repeat}
          kernel: [13]
          stride: [1]
          dilation: [1]
          dropout: ${dropout}
          residual: true
          separable: ${separable}
          se: true
          se_context_size: -1

        - filters: 192
          repeat: ${repeat}
          kernel: [15]
          stride: [1]
          dilation: [1]
          dropout: ${dropout}
          residual: true
          separable: ${separable}
          se: true
          se_context_size: -1

        - filters: 192
          repeat: ${repeat}
          kernel: [17]
          stride: [1]
          dilation: [1]
          dropout: ${dropout}
          residual: true
          separable: ${separable}
          se: true
          se_context_size: -1

        - filters: 192
          repeat: ${repeat}
          kernel: [19]
          stride: [1]
          dilation: [1]
          dropout: ${dropout}
          residual: true
          separable: ${separable}
          se: true
          se_context_size: -1

        - filters: 192
          repeat: ${repeat}
          kernel: [21]
          stride: [1]
          dilation: [1]
          dropout: ${dropout}
          residual: true
          separable: ${separable}
          se: true
          se_context_size: -1

        - filters: 192
          repeat: ${repeat}
          kernel: [13]
          stride: [2]  # *stride
          dilation: [1]
          dropout: ${dropout}
          residual: true
          separable: ${separable}
          se: true
          se_context_size: -1
          stride_last: true
          residual_mode: "stride_add"

        - filters: 192
          repeat: ${repeat}
          kernel: [15]
          stride: [1]
          dilation: [1]
          dropout: ${dropout}
          residual: true
          separable: ${separable}
          se: true
          se_context_size: -1

        - filters: 192
          repeat: ${repeat}
          kernel: [17]
          stride: [1]
          dilation: [1]
          dropout: ${dropout}
          residual: true
          separable: ${separable}
          se: true
          se_context_size: -1

        - filters: 192
          repeat: ${repeat}
          kernel: [19]
          stride: [1]
          dilation: [1]
          dropout: ${dropout}
          residual: true
          separable: ${separable}
          se: true
          se_context_size: -1

        - filters: 384
          repeat: ${repeat}
          kernel: [21]
          stride: [1]
          dilation: [1]
          dropout: ${dropout}
          residual: true
          separable: ${separable}
          se: true
          se_context_size: -1

        - filters: 384
          repeat: ${repeat}
          kernel: [23]
          stride: [1]
          dilation: [1]
          dropout: ${dropout}
          residual: true
          separable: ${separable}
          se: true
          se_context_size: -1

        - filters: 384
          repeat: ${repeat}
          kernel: [25]
          stride: [1]
          dilation: [1]
          dropout: ${dropout}
          residual: true
          separable: ${separable}
          se: true
          se_context_size: -1

        - filters: 384
          repeat: ${repeat}
          kernel: [25]
          stride: [2]  # stride
          dilation: [1]
          dropout: ${dropout}
          residual: true
          separable: ${separable}
          se: true
          se_context_size: -1
          stride_last: true
          residual_mode: "stride_add"

        - filters: 384
          repeat: ${repeat}
          kernel: [27]
          stride: [1]
          dilation: [1]
          dropout: ${dropout}
          residual: true
          separable: ${separable}
          se: true
          se_context_size: -1

        - filters: 384
          repeat: ${repeat}
          kernel: [29]
          stride: [1]
          dilation: [1]
          dropout: ${dropout}
          residual: true
          separable: ${separable}
          se: true
          se_context_size: -1

        - filters: 384
          repeat: ${repeat}
          kernel: [31]
          stride: [1]
          dilation: [1]
          dropout: ${dropout}
          residual: true
          separable: ${separable}
          se: true
          se_context_size: -1

        - filters: 384
          repeat: ${repeat}
          kernel: [33]
          stride: [1]
          dilation: [1]
          dropout: ${dropout}
          residual: true
          separable: ${separable}
          se: true
          se_context_size: -1

        - filters: 384
          repeat: ${repeat}
          kernel: [35]
          stride: [1]
          dilation: [1]
          dropout: ${dropout}
          residual: true
          separable: ${separable}
          se: true
          se_context_size: -1

        - filters: 384
          repeat: ${repeat}
          kernel: [37]
          stride: [1]
          dilation: [1]
          dropout: ${dropout}
          residual: true
          separable: ${separable}
          se: true
          se_context_size: -1

        - filters: 384
          repeat: ${repeat}
          kernel: [39]
          stride: [1]
          dilation: [1]
          dropout: ${dropout}
          residual: true
          separable: ${separable}
          se: true
          se_context_size: -1

        - filters: &enc_final 480
          repeat: 1
          kernel: [41]
          stride: [1]
          dilation: [1]
          dropout: 0.0
          residual: false
          separable: ${separable}
          se: true
          se_context_size: -1


  decoder:
    cls: nemo.collections.asr.modules.ConvASRDecoder
    params:
      feat_in: *enc_final
      num_classes: -1  # filled with vocabulary size from tokenizer at runtime
      vocabulary: []  # filled with vocabulary from tokenizer at runtime

  optim:
    name: adam
    # cls: nemo.core.optim.optimizers.Adam
    lr: .1

    # optimizer arguments
    betas: [0.9, 0.999]
    weight_decay: 0.0001

    # scheduler setup
    sched:
      name: CosineAnnealing

      # scheduler config override
      warmup_steps: null
      warmup_ratio: 0.05
      min_lr: 1e-6
      last_epoch: -1

trainer:
  gpus: 0 # number of gpus
  max_epochs: 5
  max_steps: null # computed at runtime if not set
  num_nodes: 1
  distributed_backend: ddp
  accumulate_grad_batches: 1
  checkpoint_callback: False  # Provided by exp_manager
  logger: False  # Provided by exp_manager
  row_log_interval: 1  # Interval of logging.
  val_check_interval: 1.0 # Set to 0.25 to check 4 times per epoch, or an int for number of iterations

exp_manager:
  root_dir: null
  name: *name
  create_tensorboard_logger: True
  create_checkpoint_callback: True
  wandb_exp: null
  wandb_project: null

hydra:
  run:
    dir: .
  job_logging:
    root:
      handlers: null
