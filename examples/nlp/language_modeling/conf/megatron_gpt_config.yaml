trainer:
  gpus: 1
  num_nodes: 1
  accelerator: ddp
  precision: 16
  logger: False
  checkpoint_callback: False
  replace_sampler_ddp: False
  max_epochs: null
  max_steps: 100000 # consumed_samples = global_step * micro_batch_size * data_parallel_size * accumulate_grad_batches
  log_every_n_steps: 100
  val_check_interval: 100
  limit_val_batches: 50
  limit_test_batches: 500
  accumulate_grad_batches: 1
  gradient_clip_val: 1.0 # TODO: implement model parallel gradient clipping

exp_manager:
  explicit_log_dir: null
  exp_dir: /raid/nemo_experiments/
  name: megatron_gpt
  create_wandb_logger: True
  wandb_logger_kwargs:
    project: nemo_megatron_gpt_pretraining
    name: dev
  resume_if_exists: True
  resume_ignore_no_checkpoint: True
  create_checkpoint_callback: True
  checkpoint_callback_params:
    monitor: val_loss
    save_top_k: 10
    mode: min
    always_save_nemo: False # TODO: add support for model parallel
    filename: 'megatron_gpt--{val_loss:.2f}-{step}'


model:
  debug: False # logs debugging info
  # TODO: add validation generation config, size of context, max sequence length
  # needed to initialize megatron
  micro_batch_size: 8
  tensor_model_parallel_size: 1
  encoder_seq_length: 1024
  max_position_embeddings: 1024
  num_layers: 24
  hidden_size: 1024
  num_attention_heads: 16
  init_method_std: 0.02
  fp16: True # True if using native amp
  native_amp_init_scale: 4294967296 # 2 ** 32
  native_amp_growth_interval: 1000
  use_cpu_initialization: False # init weights on the CPU (slow for large models)
  tokenizer:
    library: 'megatron'
    type: 'GPT2BPETokenizer'
    model: null
    vocab_file: /raid/data/gpt/vocab.json
    merge_file: /raid/data/gpt/merges.txt

  seed: 1234

  # GPT
  pre_process: True
  post_process: True

  data:
    # data_prefix
      # weight 
      # path
    data_prefix: 
      - .5
      - /raid/data/pile/my-gpt3_00_text_document
      - .5
      - /raid/data/pile/my-gpt3_01_text_document
    data_impl: mmap
    splits_string: 900,50,50
    seq_length: 1024
    skip_warmup: False
    num_workers: 0
    dataloader_type: single # cyclic
  
  optim:
    name: adam
    lr: 2e-4
    weight_decay: 0.01 
    betas: 
    - 0.9
    - 0.98
    sched:
      name: CosineAnnealing
      warmup_steps: 500
      constant_steps: 50000
      min_lr: 2e-5
