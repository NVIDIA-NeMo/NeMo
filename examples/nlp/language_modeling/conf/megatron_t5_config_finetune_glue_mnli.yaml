name: megatron_t5_glue

trainer:
  devices: 2
  num_nodes: 1
  accelerator: gpu
  precision: 16
  logger: False # logger provided by exp_manager
  enable_checkpointing: False
  replace_sampler_ddp: False
  max_epochs: 30
  max_steps: null # consumed_samples = global_step * micro_batch_size * data_parallel_size * accumulate_grad_batches
  log_every_n_steps: 10
  val_check_interval: 19
  accumulate_grad_batches: 1
  gradient_clip_val: 1.0

exp_manager:
  explicit_log_dir: null
  exp_dir: null
  name: megatron_t5_glue
  create_wandb_logger: False
  wandb_logger_kwargs:
    project: null
    name: null
  resume_if_exists: True
  resume_ignore_no_checkpoint: True
  create_checkpoint_callback: True
  checkpoint_callback_params:
    monitor: validation_acc
    save_top_k: 10
    mode: max
    always_save_nemo: False # TODO: add support
    filename: 'megatron_t5--{validation_acc:.3f}-{step}'
    model_parallel_size: ${model.tensor_model_parallel_size}
    save_best_model: True

model:
  restore_from_path: /raid/Data/NMT/Models/t5_220m/megatron_t5_tp_1_pp_2.nemo
  # restore_from_path: /raid/Data/NMT/Models/mt5_220m/refactored/seq_1024_drop0/megatron_t5--val_loss=1.45-step=610999-consumed_samples=625643520.0.nemo # Path to a trained T5 .nemo file
  # restore_from_path: /raid/Data/NMT/Models/t5_220m/refactored/bf16_O1/megatron_t5--val_loss=1.47-step=999999-consumed_samples=2047944704.0.nemo
  # restore_from_path: /raid/Data/NMT/Models/t5_3b/megatron_t5--val_loss=1.12-step=752950-consumed_samples=1626258816.0.nemo
  tensor_model_parallel_size: 2
  pipeline_model_parallel_size: 1
  gradient_as_bucket_view: True # Allocate gradients in a contiguous bucket to save memory (less fragmentation and buffer memory)
  megatron_amp_O2: False # Enable O2 optimization for megatron amp
  resume_from_checkpoint: null
  hidden_dropout: 0.1 # Override dropout prob from pretraining
  attention_dropout: 0.1 # Override dropout prob from pretraining

  data:
    train_ds:
      task_name: 'rte'
      file_path: /raid/Data/GLUE/RTE/train.tsv # Path to the TSV file for MNLI train ex: '/raid/Data/GLUE/MNLI/train.tsv'
      global_batch_size: 128
      micro_batch_size: 64
      shuffle: True
      num_workers: 8
      pin_memory: True
      max_seq_length: 512
      drop_last: True

    validation_ds:
      task_name: 'rte'
      file_path: /raid/Data/GLUE/RTE/dev.tsv # Path to the TSV file for MNLI dev ex: '/raid/Data/GLUE/MNLI/dev_matched.tsv'
      global_batch_size: 128
      micro_batch_size: 64
      shuffle: False
      num_workers: 8
      pin_memory: True
      max_seq_length: 512
      drop_last: True # TODO: Figure out if there is a way to avoid dropping last.

  optim:
    name: fused_adam
    lr: 5e-6
    weight_decay: 0.0
