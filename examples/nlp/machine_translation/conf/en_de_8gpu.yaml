# Config file for training left-to-right Transformer language model
name: &name TransformerMT

trainer:
  gpus: 8
  num_nodes: 1
  max_epochs: 1000
  max_steps: 100000 # precedence over max_epochs
  accumulate_grad_batches: 1 # accumulates grads every k batches
  amp_level: O2 # O1/O2 for mixed precision
  precision: 16 # Should be set to 16 for O1 and O2, default is 16 as PT ignores it when am_level is O0
  distributed_backend: ddp
  checkpoint_callback: False  # Provided by exp_manager
  logger: False  # Provided by exp_manager
  log_every_n_steps: 100  # Interval of logging.
  val_check_interval: 1000  # Set to 0.25 to check 4 times per epoch, or an int for number of iterations
  resume_from_checkpoint: null # The path to a checkpoint file to continue the training, restores the whole state including the epoch, step, LR schedulers, apex, etc.
  progress_bar_refresh_rate: 0

model:
  test_checkpoint_path: null
  machine_translation:
    tokenizer:
      tokenizer_name: yttm
      tokenizer_model: /data/bpe_37k_en_de_yttm.model
# 2 following fields are mutually exclusive with `tokenizer`
#    src_tokenizer:
#      tokenizer_name: yttm
#      tokenizer_model: /data/bpe_37k_en_de_yttm.model
#    tgt_tokenizer:
#      tokenizer_name: yttm
#      tokenizer_model: /data/bpe_37k_en_de_yttm.model
    hidden_size: 512
    num_layers: 6
    num_attn_heads: 8
    inner_size: 2048
    max_seq_length: 512  # maximum allowed length in embedding layer
    embedding_dropout: 0.1
    ffn_dropout: 0.1
    attn_score_dropout: 0.1
    attn_layer_dropout: 0.1
    label_smoothing: 0.1
    beam_size: 4
    len_pen: 0.6
    max_generation_delta: 50

  train_ds:
    src_file_name: /data/train.en
    tgt_file_name: /data/train.de
    tokens_in_batch: 6250  # This is limit per gpu. Total limit is 50000
    clean: true
    max_seq_length: 512
    shuffle: true
    num_samples: -1 # number of samples to be considered, -1 means all the dataset
    drop_last: false # drops the last last batch if it is smaller than the batch size
    pin_memory: false # enables pin_memory feature of the data loaders
    num_workers: 8 # number of workers for data loaders

  validation_ds:
    src_file_name: /data/valid.en # path to file with validation data
    tgt_file_name: /data/valid.de
    tokens_in_batch: 512
    shuffle: false
    num_samples: -1 # number of samples to be considered, -1 means all the dataset
    predict_last_k: 0
    drop_last: false # drops the last last batch if it is smaller than the batch size
    pin_memory: false # enables pin_memory feature of the data loaders
    num_workers: 8 # number of workers for data loaders
    num_examples: 10 # number of examples of translation

  test_ds:
    src_file_name: /data/test.en # path to file with validation data
    tgt_file_name: /data/test.de
    tokens_in_batch: 512
    shuffle: false
    num_samples: -1 # number of samples to be considered, -1 means all the dataset
    predict_last_k: 0
    drop_last: false # drops the last last batch if it is smaller than the batch size
    pin_memory: false # enables pin_memory feature of the data loaders
    num_workers: 8 # number of workers for data loaders
    num_examples: 10 # number of examples of translation

  optim:
    name: adam
    lr: 7e-4
    betas: [0.9, 0.98]
    weight_decay: 0

    sched:
      name: InverseSquareRootAnnealing
      warmup_steps: null
      warmup_ratio: 0.04
      last_epoch: -1

      # pytorch lightning args
      monitor: val_loss
      reduce_on_plateau: false

exp_manager:
  exp_dir: /result  # where to store logs and checkpoints
  name: *name  # name of experiment
  create_tensorboard_logger: True
  create_checkpoint_callback: True

hydra:
  run:
    dir: .
  job_logging:
    root:
      handlers: null
