# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import nmt_pb2 as nmt__pb2


class JarvisTranslateStub(object):
    """Jarvis NLP Services implement task-specific APIs for popular NLP tasks including
    intent recognition (as well as slot filling), and entity extraction.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.TranslateText = channel.unary_unary(
            '/nvidia.jarvis.nmt.JarvisTranslate/TranslateText',
            request_serializer=nmt__pb2.TranslateTextRequest.SerializeToString,
            response_deserializer=nmt__pb2.TranslateTextResponse.FromString,
        )


class JarvisTranslateServicer(object):
    """Jarvis NLP Services implement task-specific APIs for popular NLP tasks including
    intent recognition (as well as slot filling), and entity extraction.
    """

    def TranslateText(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_JarvisTranslateServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'TranslateText': grpc.unary_unary_rpc_method_handler(
            servicer.TranslateText,
            request_deserializer=nmt__pb2.TranslateTextRequest.FromString,
            response_serializer=nmt__pb2.TranslateTextResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler('nvidia.jarvis.nmt.JarvisTranslate', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class JarvisTranslate(object):
    """Jarvis NLP Services implement task-specific APIs for popular NLP tasks including
    intent recognition (as well as slot filling), and entity extraction.
    """

    @staticmethod
    def TranslateText(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nvidia.jarvis.nmt.JarvisTranslate/TranslateText',
            nmt__pb2.TranslateTextRequest.SerializeToString,
            nmt__pb2.TranslateTextResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
