name: &name "MB_MelGan"
sample_rate: &sr 22050
# <PAD>, <BOS>, <EOS> will be added by the tacotron2.py script
labels: &labels [' ', '!', '"', "'", '(', ')', ',', '-', '.', ':', ';', '?', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H',
                 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '[', ']',
                 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',
                 'u', 'v', 'w', 'x', 'y', 'z']
n_fft: &n_fft 1024
fmax: &fmax null
n_stride: &n_window_stride 256
pad_value: &pad_value -11.52
train_dataset: ???
validation_datasets: ???
n_mels: &n_mels 80

model:
  adv_lambda: 2.5

  labels: ${labels}
  train_ds:
    dataset:
      cls: "nemo.collections.tts.data.datalayers.AudioDataset"
      params:
        manifest_filepath: ${train_dataset}
        max_duration: null
        min_duration: 0.75
        n_segments: 16384
        trim: false
    dataloader_params:
      drop_last: false
      shuffle: true
      batch_size: 64
      num_workers: 4


  validation_ds:
    dataset:
      cls: "nemo.collections.tts.data.datalayers.AudioDataset"
      params:
        manifest_filepath: ${validation_datasets}
        max_duration: null
        min_duration: 0.75
        n_segments: -1
        trim: false
    dataloader_params:
      drop_last: false
      shuffle: false
      batch_size: 13
      num_workers: 4

  preprocessor:
    cls: nemo.collections.asr.parts.features.FilterbankFeatures
    params:
      dither: 0.0
      nfilt: *n_mels
      frame_splicing: 1
      highfreq: *fmax
      log: true
      log_zero_guard_type: clamp
      log_zero_guard_value: 1e-05
      lowfreq: 0
      mag_power: 1.0
      n_fft: *n_fft

      # Waveglow is currently hardcoded to these values for window size and stride
      # Changing these parameters are not recommended
      n_window_size: 1024
      n_window_stride: 256

      normalize: null
      pad_to: 0
      pad_value: *pad_value
      preemph: null
      sample_rate: *sr
      stft_conv: false
      window: hann

  gen:
    in_channels: 80               # Number of input channels.
    out_channels: 4               # Number of output channels.
    kernel_size: 7                # Kernel size of initial and final conv layers.
    channels: 384                 # Initial number of channels for conv layers.
    upsample_scales: [8, 4, 2]    # List of Upsampling scales.
    stack_kernel_size: 3          # Kernel size of dilated conv layers in residual stack.
    stacks: 4                     # Number of stacks in a single residual stack module.
    use_weight_norm: True         # Whether to use weight normalization.
    use_causal_conv: False

  disc:
    in_channels: 1                    # Number of input channels.
    out_channels: 1                   # Number of output channels.
    scales: 3                         # Number of multi-scales.
    downsample_pooling: "AvgPool1d"   # Pooling type for the input downsampling.
    downsample_pooling_params:        # Parameters of the above pooling function.
        kernel_size: 4
        stride: 2
        padding: 1
        count_include_pad: False
    kernel_sizes: [5, 3]              # List of kernel size.
    channels: 16                      # Number of channels of the initial conv layer.
    max_downsample_channels: 512      # Maximum number of channels of downsampling layers.
    downsample_scales: [4, 4, 4]      # List of downsampling scales.
    nonlinear_activation: "LeakyReLU" # Nonlinear activation function.
    nonlinear_activation_params:      # Parameters of nonlinear activation function.
        negative_slope: 0.2
    use_weight_norm: True             # Whether to use weight norm.

trainer:
  gpus: 1 # number of gpus
  max_epochs: ???
  num_nodes: 1
  accelerator: ddp
  accumulate_grad_batches: 1
  checkpoint_callback: False  # Provided by exp_manager
  logger: False  # Provided by exp_manager
  flush_logs_every_n_steps: 1000
  log_every_n_steps: 200
  check_val_every_n_epoch: 150

exp_manager:
  exp_dir: null
  name: *name
  create_tensorboard_logger: True
  create_checkpoint_callback: True
