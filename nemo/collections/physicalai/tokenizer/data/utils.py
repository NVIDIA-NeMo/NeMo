# Copyright (c) 2020, NVIDIA CORPORATION.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# pylint: disable=C0115,C0116,C0301

"""Utilities for datasets creation."""

IMAGE_KEY = "images"
VIDEO_KEY = "video"
RECON_KEY = "reconstructions"
INPUT_KEY = "INPUT"
MASK_KEY = "loss_mask"

_SPATIAL_ALIGN = 16


def get_crop_size_info(crop_sz: int = 128):
    aspect_ratios = [(1, 1), (4, 3), (3, 4), (16, 9), (9, 16)]
    crop_sizes = dict()
    for aspect_ratio in aspect_ratios:
        if aspect_ratio[0] > aspect_ratio[1]:
            crop_h = crop_sz // _SPATIAL_ALIGN * _SPATIAL_ALIGN
            crop_w = int(crop_h * aspect_ratio[0] / aspect_ratio[1] + 0.5)
            crop_w = crop_w // _SPATIAL_ALIGN * _SPATIAL_ALIGN
        else:
            crop_w = crop_sz // _SPATIAL_ALIGN * _SPATIAL_ALIGN
            crop_h = int(crop_w * aspect_ratio[1] / aspect_ratio[0] + 0.5)
            crop_h = crop_h // _SPATIAL_ALIGN * _SPATIAL_ALIGN
        key = f"{aspect_ratio[0]},{aspect_ratio[1]}"
        crop_sizes.update({key: (crop_w, crop_h)})
    return crop_sizes


IMAGE_RES_SIZE_INFO: dict[str, tuple[int, int]] = {
    "1080": {
        "1,1": (1080, 1080),
        "4,3": (1440, 1080),
        "3,4": (1080, 1440),
        "16,9": (1920, 1080),
        "9,16": (1080, 1920),
    },
    "1024": {"1,1": (1024, 1024), "4,3": (1280, 1024), "3,4": (1024, 1280), "16,9": (1280, 768), "9,16": (768, 1280)},
    "720": {"1,1": (720, 720), "4,3": (960, 720), "3,4": (720, 960), "16,9": (1280, 720), "9,16": (720, 1280)},
    "480": {"1,1": (480, 480), "4,3": (640, 480), "3,4": (480, 640), "16,9": (854, 480), "9,16": (480, 854)},
    "320": {"1,1": (304, 304), "4,3": (400, 304), "3,4": (304, 400), "16,9": (544, 304), "9,16": (304, 544)},
    "512": {"1,1": (512, 512), "4,3": (672, 512), "3,4": (512, 672), "16,9": (896, 512), "9,16": (512, 896)},
    "256": {"1,1": (256, 256), "4,3": (320, 256), "3,4": (256, 320), "16,9": (320, 192), "9,16": (192, 320)},
    "128": {  # Note that we set res lower than 256 to the same resolution as 256
        "1,1": (256, 256),
        "4,3": (320, 256),
        "3,4": (256, 320),
        "16,9": (448, 256),
        "9,16": (256, 448),
    },
}

IMAGE_VAL_CROP_SIZE_INFO: dict[str, tuple[int, int]] = {
    "1080": {"1,1": (720, 720), "4,3": (960, 720), "3,4": (720, 960), "16,9": (1280, 720), "9,16": (720, 1280)},
    "1024": {"1,1": (1024, 1024), "4,3": (1280, 1024), "3,4": (1024, 1280), "16,9": (1280, 768), "9,16": (768, 1280)},
    "720": {"1,1": (720, 720), "4,3": (960, 720), "3,4": (720, 960), "16,9": (1280, 720), "9,16": (720, 1280)},
    "480": {"1,1": (480, 480), "4,3": (640, 480), "3,4": (480, 640), "16,9": (848, 480), "9,16": (480, 848)},
    "320": {"1,1": (304, 304), "4,3": (400, 304), "3,4": (304, 400), "16,9": (544, 304), "9,16": (304, 544)},
    "512": {"1,1": (512, 512), "4,3": (672, 512), "3,4": (512, 672), "16,9": (896, 512), "9,16": (512, 896)},
    "256": {"1,1": (256, 256), "4,3": (320, 256), "3,4": (256, 320), "16,9": (320, 192), "9,16": (192, 320)},
    "128": {  # Note that we set res lower than 256 to the same resolution as 256
        "1,1": (256, 256),
        "4,3": (320, 256),
        "3,4": (256, 320),
        "16,9": (448, 256),
        "9,16": (256, 448),
    },
}

VIDEO_RES_SIZE_INFO: dict[str, tuple[int, int]] = {
    "1080": {  # 1080p doesn't have 1:1
        "4,3": (1440, 1072),
        "3,4": (1072, 1440),
        "16,9": (1920, 1072),
        "9,16": (1072, 1920),
    },
    "720": {"1,1": (720, 720), "4,3": (960, 720), "3,4": (720, 960), "16,9": (1280, 720), "9,16": (720, 1280)},
    "480": {"1,1": (480, 480), "4,3": (640, 480), "3,4": (480, 640), "16,9": (854, 480), "9,16": (480, 854)},
    "512": {"1,1": (512, 512), "4,3": (672, 512), "3,4": (512, 672), "16,9": (896, 512), "9,16": (512, 896)},
    "320": {"1,1": (320, 320), "4,3": (416, 320), "3,4": (320, 416), "16,9": (544, 320), "9,16": (320, 544)},
    "256": {"1,1": (256, 256), "4,3": (320, 256), "3,4": (256, 320), "16,9": (320, 192), "9,16": (192, 320)},
    "128": {  # Note that we set res lower than 256 to the same resolution as 256
        "1,1": (256, 256),
        "4,3": (320, 256),
        "3,4": (256, 320),
        "16,9": (448, 256),
        "9,16": (256, 448),
    },
}

VIDEO_VAL_CROP_SIZE_INFO: dict[str, tuple[int, int]] = {
    "1080": {  # 1080p doesn't have 1:1
        "4,3": (1424, 1072),
        "3,4": (1072, 1424),
        "16,9": (1904, 1072),
        "9,16": (1072, 1904),
        "16,10": (1715, 1072),
    },
    "720": {"1,1": (704, 704), "4,3": (944, 704), "3,4": (704, 944), "16,9": (1264, 704), "9,16": (704, 1264)},
    "480": {"1,1": (464, 464), "4,3": (624, 464), "3,4": (464, 624), "16,9": (848, 464), "9,16": (464, 848)},
    "320": {"1,1": (320, 320), "4,3": (416, 320), "3,4": (320, 416), "16,9": (544, 320), "9,16": (320, 544)},
    "512": {"1,1": (512, 512), "4,3": (672, 512), "3,4": (512, 672), "16,9": (896, 512), "9,16": (512, 896)},
    "256": {"1,1": (256, 256), "4,3": (320, 256), "3,4": (256, 320), "16,9": (320, 192), "9,16": (192, 320)},
    "128": {  # Note that we set res lower than 256 to the same resolution as 256
        "1,1": (256, 256),
        "4,3": (320, 256),
        "3,4": (256, 320),
        "16,9": (320, 192),
        "9,16": (192, 320),
        "16,10": (410, 256),
    },
}
