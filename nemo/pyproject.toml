[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "nemo-tron"
version = "0.0.0" # Figure out version later
authors = [
  { name="Author Name", email="author@example.com" }, # <-- TODO: Fill in author details
]
description = "Standalone packaging for the NeMo Tron sub-module."
readme = "README.md" # <-- TODO: Recommend creating this file
requires-python = ">=3.8" # <-- TODO: Verify and adjust based on tron's requirements
# IMPORTANT: List the actual dependencies required by the 'tron' code here.
# This is just a placeholder list. You MUST replace it with the real dependencies.
dependencies = [
    "lightning",
    "wget",
    "onnx",
    "fiddle",
    "cloudpickle",
    "braceexpand",
    "webdataset",
    "h5py",
    "ijson",
    "matplotlib",
    "scikit-learn",
    "nemo-run",
    "hatchling",  # added for nemo-run, but idk if needed, try removing before finalizing
]

[tool.uv.sources]
nemo_run = { git = "https://github.com/NVIDIA/NeMo-Run", rev = "414f0077c648fde2c71bb1186e97ccbf96d6844c" }

# Optional dependencies can be defined like this:
# [project.optional-dependencies]
# dev = ["pytest", "flake8"]


[tool.setuptools]
packages = [
  "nemo.tron",
  "nemo.tron.utils",
  "nemo.tron.tokenizers",
  "nemo.tron.data",
  "nemo.tron.llm",
  "nemo.tron.converter",

  "nemo",  # initially for nemo/constants.py module
  "nemo.automodel",
  "nemo.automodel.loss",
  "nemo.collections.common",
  "nemo.collections.common.callbacks",
  "nemo.collections.common.data",
  "nemo.collections.common.losses",
  "nemo.collections.common.parts",
  "nemo.collections.common.tokenizers",
  "nemo.collections.common.tokenizers.huggingface",
  "nemo.collections.llm",
  "nemo.collections.llm.bert",
  "nemo.collections.llm.bert.data",
  "nemo.collections.llm.bert.model",
  "nemo.collections.llm.peft",
  "nemo.collections.llm.fn",
  "nemo.collections.llm.gpt.model",
  "nemo.collections.llm.gpt.model.megatron",
  "nemo.collections.llm.gpt.model.megatron.hyena",
  "nemo.collections.llm.gpt.data",
  "nemo.collections.llm.t5",
  "nemo.collections.llm.t5.data",
  "nemo.collections.llm.t5.model",
  "nemo.collections.nlp",
  "nemo.collections.nlp.data",
  "nemo.collections.nlp.data.data_utils",
  "nemo.collections.nlp.data.entity_linking",
  "nemo.collections.nlp.data.information_retrieval",
  "nemo.collections.nlp.data.language_modeling",
  "nemo.collections.nlp.data.machine_translation",
  "nemo.collections.nlp.data.question_answering_squad",
  "nemo.collections.nlp.data.text2sparql",
  "nemo.collections.nlp.data.text_normalization",
  "nemo.collections.nlp.data.token_classification",
  "nemo.collections.nlp.data.zero_shot_intent_recognition",
  "nemo.collections.nlp.data.glue_benchmark",
  "nemo.collections.nlp.losses",
  "nemo.collections.nlp.models",
  "nemo.collections.nlp.modules",
  "nemo.collections.nlp.modules.common",
  "nemo.collections.nlp.modules.common.huggingface",
  "nemo.collections.nlp.modules.common.megatron",
  "nemo.collections.nlp.parts",
  "nemo.core",
  "nemo.core.classes",
  "nemo.core.classes.mixins",
  "nemo.core.config",
  "nemo.core.config.templates",
  "nemo.core.connectors",
  "nemo.core.neural_types",
  "nemo.core.optim",
  "nemo.core.utils",
  "nemo.core.utils.process_launcher",
  "nemo.lightning",
  "nemo.lightning.fabric",
  "nemo.lightning.io",
  "nemo.lightning.io.artifact",
  "nemo.lightning.pytorch",
  "nemo.lightning.pytorch.plugins",
  "nemo.lightning.pytorch.strategies",
  "nemo.lightning.pytorch.callbacks",
  "nemo.lightning.pytorch.optim",
  "nemo.utils",
  "nemo.utils.callbacks",
  "nemo.utils.decorators",
  "nemo.utils.formatters",
  "nemo.export",
  "nemo.export.trt_llm",
  "nemo.export.trt_llm.nemo_ckpt_loader",
  "nemo.export.utils",
]

# â€¦and where their code lives on disk.
[tool.setuptools.package-dir]
"nemo.tron"                         = "tron"
"nemo.tron.utils"                   = "tron/utils"
"nemo.tron.tokenizers"              = "tron/tokenizers"
"nemo.tron.data"                    = "tron/data"
"nemo.tron.llm"                     = "tron/llm"
"nemo.tron.converter"               = "tron/converter"

"nemo"                                   = "."  # initially for nemo/constants.py module
"nemo.automodel"                     = "automodel"
"nemo.automodel.loss"                = "automodel/loss"
"nemo.collections.common"                = "collections/common"
"nemo.collections.common.callbacks"      = "collections/common/callbacks"
"nemo.collections.common.data"           = "collections/common/data"
"nemo.collections.common.losses"         = "collections/common/losses"
"nemo.collections.common.parts"          = "collections/common/parts"
"nemo.collections.common.tokenizers"     = "collections/common/tokenizers"
"nemo.collections.common.tokenizers.huggingface" = "collections/common/tokenizers/huggingface"
"nemo.collections.llm"                   = "collections/llm"
"nemo.collections.llm.bert"              = "collections/llm/bert"
"nemo.collections.llm.bert.data"         = "collections/llm/bert/data"
"nemo.collections.llm.bert.model"        = "collections/llm/bert/model"
"nemo.collections.llm.peft"              = "collections/llm/peft"
"nemo.collections.llm.fn"                = "collections/llm/fn"
"nemo.collections.llm.gpt.model"         = "collections/llm/gpt/model"
"nemo.collections.llm.gpt.model.megatron"= "collections/llm/gpt/model/megatron"
"nemo.collections.llm.gpt.model.megatron.hyena" = "collections/llm/gpt/model/megatron/hyena"
"nemo.collections.llm.gpt.data"          = "collections/llm/gpt/data"
"nemo.collections.llm.t5"                = "collections/llm/t5"
"nemo.collections.llm.t5.data"           = "collections/llm/t5/data"
"nemo.collections.llm.t5.model"          = "collections/llm/t5/model"
"nemo.collections.nlp"                   = "collections/nlp"
"nemo.collections.nlp.data"              = "collections/nlp/data"
"nemo.collections.nlp.data.data_utils"   = "collections/nlp/data/data_utils"
"nemo.collections.nlp.data.entity_linking" = "collections/nlp/data/entity_linking"
"nemo.collections.nlp.data.information_retrieval" = "collections/nlp/data/information_retrieval"
"nemo.collections.nlp.data.language_modeling" = "collections/nlp/data/language_modeling"
"nemo.collections.nlp.data.machine_translation" = "collections/nlp/data/machine_translation"
"nemo.collections.nlp.data.question_answering_squad" = "collections/nlp/data/question_answering_squad"
"nemo.collections.nlp.data.text2sparql"  = "collections/nlp/data/text2sparql"
"nemo.collections.nlp.data.text_normalization" = "collections/nlp/data/text_normalization"
"nemo.collections.nlp.data.token_classification" = "collections/nlp/data/token_classification"
"nemo.collections.nlp.data.zero_shot_intent_recognition" = "collections/nlp/data/zero_shot_intent_recognition"
"nemo.collections.nlp.data.glue_benchmark" = "collections/nlp/data/glue_benchmark"
"nemo.collections.nlp.losses"            = "collections/nlp/losses"
"nemo.collections.nlp.models"            = "collections/nlp/models"
"nemo.collections.nlp.modules"           = "collections/nlp/modules"
"nemo.collections.nlp.modules.common"    = "collections/nlp/modules/common"
"nemo.collections.nlp.modules.common.huggingface" = "collections/nlp/modules/common/huggingface"
"nemo.collections.nlp.modules.common.megatron" = "collections/nlp/modules/common/megatron"
"nemo.collections.nlp.parts"             = "collections/nlp/parts"
"nemo.core"                              = "core"
"nemo.core.classes"                      = "core/classes"
"nemo.core.classes.mixins"               = "core/classes/mixins"
"nemo.core.config"                       = "core/config"
"nemo.core.config.templates"             = "core/config/templates"
"nemo.core.connectors"                   = "core/connectors"
"nemo.core.neural_types"                 = "core/neural_types"
"nemo.core.optim"                        = "core/optim"
"nemo.core.utils"                        = "core/utils"
"nemo.core.utils.process_launcher"       = "core/utils/process_launcher"
"nemo.lightning"                         = "lightning"
"nemo.lightning.fabric"                  = "lightning/fabric"
"nemo.lightning.io"                      = "lightning/io"
"nemo.lightning.io.artifact"             = "lightning/io/artifact"
"nemo.lightning.pytorch"                 = "lightning/pytorch"
"nemo.lightning.pytorch.plugins"         = "lightning/pytorch/plugins"
"nemo.lightning.pytorch.strategies"      = "lightning/pytorch/strategies"
"nemo.lightning.pytorch.callbacks"       = "lightning/pytorch/callbacks"
"nemo.lightning.pytorch.optim"           = "lightning/pytorch/optim"
"nemo.utils"                             = "utils"
"nemo.utils.callbacks"                   = "utils/callbacks"
"nemo.utils.decorators"                  = "utils/decorators"
"nemo.utils.formatters"                  = "utils/formatters"
"nemo.export"                          = "export"
"nemo.export.trt_llm"                  = "export/trt_llm"
"nemo.export.trt_llm.nemo_ckpt_loader" = "export/trt_llm/nemo_ckpt_loader"
"nemo.export.utils"                    = "export/utils"